＜本フォルダのファイルについて＞
３次元空間に設定された曲線の上をキャラ(や弾)が移動したりする際に使用されます。
次の２種類のファイルによって定義されています。

①スプライン曲線座標情報ファイル   ・・・ splファイル
②曲線移動の情報ファイル           ・・・ ldrファイル

＜スプライン曲線座標情報ファイル(*.spl)について＞
スプライン曲線のもととなる頂点座標情報を保持します。
以下のようなフォーマットのスプライン曲線の座標情報ファイルです。
(※gnuplotの出力ファイルがそのまま使用出来るで！)

samplebase.spl ---------------------------------
[BASEPOINT]
#       X         Y         Z
-1.724577  0.000000  0.000000
-0.964337 -0.088378 -0.344892
-0.501305 -0.055518 -0.298879
-0.179336 -0.031628 -0.240141
 0.123544 -0.016126 -0.165195
 0.362343  0.000000  0.000000
 0.545634  0.038709  0.176104
 0.704048  0.173192  0.372772
 0.864812  0.444651  0.516556
 1.055714  0.626849  0.569336
 1.246407  0.655359  0.547772
 1.365876  0.590994  0.453279
 1.388259  0.465998  0.332581
 1.362117  0.328636  0.211183
 1.242692  0.226675  0.087900
 1.064405  0.202917  0.000000
 0.920421  0.202917  0.000000

[ACCURACY]
0.2

[ADJUST_MAT]
0		0		-1		0
0		1		0		0
1		0		0		0
0		0		-5.0	1

-------------------------------------------------


＜スプライン曲線座標情報ファイルの各項目の説明＞

[BASEPOINT]
スプライン曲線上の制御点座標情報です。
X Y Z で設定。指定できるポイント数は最大1000個までです。

[ACCURACY]
スプライン曲線座標点の精度。
BASEPOINTで指定した制御点～制御点の間にどのくらいの補完点を追加するかという割合を指定します。
補完点は、前後の制御点により、なめらかな曲線を描くような位置に挿入されます。（いわゆるスプライン曲線）

1.0  を指定すると制御点～制御点の間に補完点は挿入されず、BASEPOINT指定通りのままとなる。
0.5  を指定すると各制御点～制御点について、2分割される点に補完点が計算されて挿入される。(つまり制御点～制御点に、補完点は1個づつ挿入される)
0.25 を指定すると各制御点～制御点について、4分割される点に補完点が計算されて挿入される。(補完点は3個挿入される)
0.1  を指定すると各制御点～制御点について、10分割される点に補完点が計算されて挿入される。(補完点は9個挿入される)
0.01 を指定すると各制御点～制御点について、100分割される点に補完点が計算されて挿入される。(補完点は99個挿入される)
といった具合。

[ADJUST_MAT]
変換行列(4x4)を設定し、BASEPOINT座標情報の補正が可能です。
例では 元のBASEPOINTの座標に、X軸に5.0移動→90度Y軸回 を行う補正の変換行列です。

0		0		-1		0
0		1		0		0
1		0		0		0
0		0		-5.0	1

もし ADJUST_MAT 省略した場合は、次の単位行列が設定されたものとします。

1		0		0		0
0		1		0		0
0		0		1		0
0		0		0		1




＜曲線移動の情報ファイル(*.ldr)ついて＞

曲線移動の情報ファイルとは、拡張子が ldr で以下のようなフォーマットのファイルの事です。
プログラムで読み込まれ、キャラの動きに使用されます。以下サンプル。

sample.spl -------------------------------------
SPLINE=samplebase.spl
MAG_X=4000000.0
MAG_Y=1125000.0
MAG_Z=4000000.0
CLASS=FixedFrameSpline
SPENT_FRAME=300
ANGLE_VELOCITY=12000
TURN_WAY=TURN_CLOSE_TO
TURN_OPTIMIZE=true
------------------------------------------------


＜曲線移動の情報ファイルの各項目の説明＞

・"SPLINE"
スプライン曲線の座標情報のファイルを指定します。
カンマ区切りで複数指定可能。その場合は呼び出し側のプログラムで、何個要素目(0～)のファイルを使用するか指定が必要です。
＜例＞ 
  pSplManufConn_ = getConnection_SplineManufactureManager("FormationUrydike002/3"); 
    → FormationUrydike002.spl の [SPLINE] に記されている、3要素目ファイル（カンマ区切りの４つ目）の座標情報のファイルを指定

・"MAG_X", "MAG_Y", "MAG_Z"
前述の "SPLINE" が指定した座標情報に対して倍率を掛けることができます。
MAG_X, MAG_Y, MAG_Z は X軸方向、Y軸方向、Z軸方向、の倍率の設定値です。
サンプル例では元の座標情報(samplebase.spl)を X軸方向に4000000.0倍、Y軸方向に1125000.0倍、
Z軸方向に4000000.0倍に拡大したものをスプライン曲線のポイントとするという意味となります。
項目の省略可能。省略した場合は次のこのように設定したことになります。（1.0倍＝拡大縮小無し）

MAG_X=1.0
MAG_Y=1.0
MAG_Z=1.0

また、拡大縮小の倍率は負の数もサポートします。
Y軸反転したい場合は

MAG_X=1.0
MAG_Y=-1.0
MAG_Z=1.0

とすればOKです。


・"CLASS"
スプライン移動を制御する VehicleLeader クラスを指定します。
キャラがどのようにスプライン曲線上を移動するかに影響します。
指定可能なクラスは以下４種類のみです。
次のような特徴があります。

FixedFrameCurveVecVehicleLeader
  →スプライン曲線座標の各点（制御点＋補完点）の隣り合う開始点～終了点の移動を、時間(フレーム)固定で移動させるメソッドのクラスです。
    各キャラが保持している現在の VecVehicle の移動速度は無視され、上書き設定されます。
    曲線移動で費やすフレーム数を。点の合計個数-1 で除算された値が、各点の間で費やすフレーム数となります。、
    予め計算された各点の間の移動速度が逐一キャラの速度値に、時間経過に伴って上書き設定されます
    そのため点の密度が濃いところはスピードが遅く、点の密度が薄いところはスピードが速い移動となります。
    後述の、[SPENT_FRAME], [ANGLE_VELOCITY], [TURN_WAY], [TURN_OPTIMIZE] の設定が必須です。

FixedVelocityCurveVecVehicleLeader
  →スプライン曲線座標の各点（制御点＋補完点）の隣り合う開始点～終了点の移動を、速度固定で移動させるメソッドのクラスです。
    各キャラが保持している移動速度がずっと使用されます。カーブ頂点付近で点が密集していてもスピードに影響しません。
    点と点の間の距離を、速度 _velo_mvUnit(=1000) で移動した場合の、費やすフレーム数が予め計算されます。
    キャラの速度によって、速度一定となるような費やすフレーム数の割合が乗じられて調整されます。
    後述の、[ANGLE_VELOCITY], [TURN_WAY], [TURN_OPTIMIZE] の設定が必須です。
    [SPENT_FRAME] の設定は不可です。これはキャラの速度によって費やすフレームが変動して決まる

FixedVelocityCurveGeoVehicleLeader
  →実験中。上記の移動を GeoVehicle.execGravitationMvSequenceTwd() で行ってふわふわした移動となる

SteppedCoordCurveVecVehicleLeader
  →スプライン曲線座標の開始点～終了点の移動を、１フレーム毎に１補間点座標へ移動させるメソッドのクラスです。
    各点（制御点＋補完点）の座標に次々に移動しますので、座標間隔が十分に細かくしないとワープしたように見えます。
    曲線全体の開始点～終了点の移動に何フレームかかるかは補間点の数と一致します。
    後述の、[SPENT_FRAME], [ANGLE_VELOCITY], [TURN_WAY], [TURN_OPTIMIZE] の設定は不可です。
    [SPENT_FRAME]は、補間点の座標数に一致します。
    [ANGLE_VELOCITY]は、意味をなさず、次の目標の座標に向かって、距離分移動します。
    [TURN_WAY]も意味をなさず。０フレームで次の目標の座標に向きます。
    [TURN_OPTIMIZE] は、設定できるようにしたかったが、内部では、GgafDxUtil::convVectorToRzRy を使用して、次の目標に方向を変えています。

・"SPENT_FRAME"
移動完了に費やすフレーム数を設定します。
これは CLASS=FixedFrameSpline とした場合のみ設定可能な項目です。
スプラインの開始点～終了点の移動を、何フレームで移動させたいのかを設定します。
FixedVelocitySpline を設定していた場合、この項目は無視されます。


・"ANGLE_VELOCITY"
毎フレーム方向転換可能な最大角(1000 で 1度）を設定します。
キャラがスプライン曲線座標の点から点へ移動する際、１フレーム当たりの方向転換可能な回転角度を設定します。
この角度を大きくし過ぎると(180000等) スプライン曲線座標の点から点へカクカクっと折れ線グラグのように移動します。
角度を小さくしすぎると(1000等) 方向転換に時間がかかり、うまくスプライン曲線の補完点を通過しない移動になるかもしれません。
スプライン曲線のカーブ度合いにより、よさげな回転角度を１つえいやっと設定しなければいけません。


・"TURN_WAY"
キャラ移動の旋回方法を指定します。次の４つから選べます。

TURN_CLOSE_TO         ・・・次の補完点座標へ方向転換する際、回転角度が少ない方を選んで旋回する
TURN_ANTICLOSE_TO     ・・・次の補完点座標へ方向転換する際、回転角度が多い方を選んで旋回する
TURN_CLOCKWISE        ・・・次の補完点座標へ方向転換する際、常に時計回りで旋回する
TURN_COUNTERCLOCKWISE ・・・次の補完点座標へ方向転換する際、常に反時計回りで旋回する

ほぼ、TURN_WAY=TURN_CLOSE_TO の１択です。
まぁ、他の旋回方法は面白い動きが期待できます。


・"TURN_OPTIMIZE"
キャラ移動の旋回方法の最適化を行うかどうか true/false で設定します。
２軸回転で向きの制御を行っているため、TURN_CLOSE_TOを設定しても目的の方向に向くためには、
常に複数のアプローチが存在します。

false：を設定した場合、目的の方向は、各軸の回転角の角度差による計算結果で求められます。
       したがって、姿勢（キャラの向きに対するroll、yaw、pitch）は、なめらかに連続性があります。

true ：を設定した場合、目的の方向を、もう一つの回転方法によるアプローチを計算し、
       ２軸の回転角の合計がより少ない方を選んで旋回します。
       姿勢の連続性は保証されません（クルっと回って、飛ぶ場合があります）

[捕捉]
基本的に TURN_OPTIMIZE=true の方が、より綺麗な旋回移動を行います。
但し、進行方向に伴ってキャラの姿勢(向き)を制御している場合、TURN_OPTIMIZE=true では、
シンバルロック付近で急にクルッと１８０度の姿勢の急回転が発生するおそれがあります。
ですので、キャラの姿勢が移動方向と独立している場合は、TURN_OPTIMIZE=true が良いですが、
移動方向に伴ってキャラの姿勢(向き)を制御したい場合 TURN_OPTIMIZE=false の方が
姿勢が連続しているため見た目はよいと思います。しかし、旋回方法が直感的(最短)でないかもしれません。


＜その他＞
これらのスプライン曲線座標は、絶対座標として移動に使用するキャラも居るし、
始点をキャラの現時点の座標とおき、相対座標として移動するキャラも居る、
それらの設定は各キャラのプログラムに組み込まれており、ココでの指定はできません。



2010/12/15 by Gecchi
2011/08/09 [SPLINE] [MAGNIFICATION] 追加による改定
2011/08/22 ２ファイルに分割
2014/09/18 [ADJUST_MAT] 追加
2015/12/04 [CLASS] にSteppedCoordSpline 追加
2021/04/05 splファイル → ldrファイル。 
           datファイル → splファイル。
           "CLASS"の説明変更
