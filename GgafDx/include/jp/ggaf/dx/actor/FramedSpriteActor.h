#ifndef GGAF_DX_FRAMEDSPRITEACTOR_H_
#define GGAF_DX_FRAMEDSPRITEACTOR_H_
#include "GgafDxCommonHeader.h"
#include "jp/ggaf/dx/actor/FigureActor.h"

namespace GgafDx {

/**
 * 枠ありのスプライトアクター.
 * @version 1.00
 * @since 2022/01/25
 * @author Masatoshi Tsuge
 */
class FramedSpriteActor : public FigureActor {

public:
    /** [r]モデル資源 */
    FramedSpriteModel* const _pFramedSpriteModel;
    /** [r]エフェクト資源 */
    FramedSpriteEffect* const _pFramedSpriteEffect;
    /** [r]UVフリッパー(中心のメイン) */
    UvFlipper* const _pUvFlipper;
    /** [r]UVフリッパー(周囲フレーム) */
    UvFlipper* const _pUvFlipper_frame;

    /** [r]モデルのオリジナルの周囲フレームの幅(px) */
    const pixcoord _model_frame_width_px;
    /** [r]モデルのオリジナルの周囲フレームの高さ(px) */
    const pixcoord _model_frame_height_px;
    /** [r]モデルのオリジナルの中心のメインの幅(px) */
    const pixcoord _model_center_width_px;
    /** [r]モデルのオリジナルの中心のメインの高さ(px) */
    const pixcoord _model_center_height_px;
    /** [r]モデルのオリジナルの全体の幅(px) */
    const pixcoord _model_total_width_px;
    /** [r]モデルのオリジナルの全体の高さ(px) */
    const pixcoord _model_total_height_px;
    /** [r]角がゆがまないで表示できる限界の _sx */
    const scale _lim_center_sx;
    /** [r]角がゆがまないで表示できる限界の _sy */
    const scale _lim_center_sy;

    float _far_rate;
    Align _align;
    Valign _valign;

public:
    /**
     * コンストラクタ .
     * @param prm_name アクター名称（デバッグログで表示、なんでも良い）
     * @param prm_model モデル定義名、末尾に ".x" をつけてXファイル名になること。
     * @param prm_effect_id エフェクト定義名。末尾に ".fx" をつけてエフェクトファイル名になること。
     * @param prm_technique エフェクトのテクニック名
     * @param prm_pChecker 使用するチェッカーオブジェクト（チェッカー未使用時はnullptrでよい）
     * @return
     */
    FramedSpriteActor(const char* prm_name,
                const char* prm_model,
                const char* prm_effect_id,
                const char* prm_technique,
                Checker* prm_pChecker );

    virtual void processDraw() override;

    virtual ~FramedSpriteActor();

    inline UvFlipper* getFrameUvFlipper() {
        return _pUvFlipper_frame;
    }

    /**
     * 遠くの座標でも強制表示 .
     * @param prm_b
     */
    void drawAnyFar(bool prm_b) {
        if (prm_b) {
            _far_rate = 0.999f;
        } else {
            _far_rate = -1.0f;
        }
    }

    inline UvFlipper* getUvFlipper() {
        return _pUvFlipper;
    }


    void setWidth(coord prm_width);
    void setHeight(coord prm_height);
    void addWidth(coord prm_width);
    void addHeight(coord prm_height);
    coord getWidth();
    coord getHeight();
};

}
#endif /*GGAF_DX_FRAMEDSPRITEACTOR_H_*/
